// <auto-generated />
using System;
using DepartmentRating.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DepartmentRating.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    partial class CoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DepartmentRating.DataBase.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Owner");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");

                    b.HasData(
                        new { AdminId = 1, Date = new DateTime(2019, 12, 2, 12, 10, 53, 553, DateTimeKind.Local), Name = "n7701-00-057", Owner = "System" }
                    );
                });

            modelBuilder.Entity("DepartmentRating.DataBase.EventLog", b =>
                {
                    b.Property<int>("EventLogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("Owner");

                    b.Property<string>("Table");

                    b.HasKey("EventLogId");

                    b.ToTable("EventLog");
                });

            modelBuilder.Entity("DepartmentRating.DataBase.Main", b =>
                {
                    b.Property<int>("MainId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("OffenceId");

                    b.Property<string>("Owner");

                    b.Property<int>("UserId");

                    b.HasKey("MainId");

                    b.HasIndex("OffenceId");

                    b.HasIndex("UserId");

                    b.ToTable("Main");
                });

            modelBuilder.Entity("DepartmentRating.DataBase.Offence", b =>
                {
                    b.Property<int>("OffenceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Name");

                    b.Property<string>("Owner");

                    b.HasKey("OffenceId");

                    b.ToTable("Offences");
                });

            modelBuilder.Entity("DepartmentRating.DataBase.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Fio");

                    b.Property<int>("Rating");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DepartmentRating.DataBase.Main", b =>
                {
                    b.HasOne("DepartmentRating.DataBase.Offence", "Offence")
                        .WithMany("Main")
                        .HasForeignKey("OffenceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DepartmentRating.DataBase.User", "User")
                        .WithMany("Main")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
